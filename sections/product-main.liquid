{{ 'product.css' | asset_url | stylesheet_tag }}

{% if product.metafields.custom.product_primary_color != blank %}
    {% capture primaryColor %}
        #storeProduct-{{ product.id }} {
            --color-new-primary: {{ product.metafields.custom.product_primary_color }};
        }

        #storeProduct-{{ product.id }} .product--title {
            color: var(--color-new-primary);
        }

        #storeProduct-{{ product.id }} .product--option-wrapper fieldset legend {
            color: var(--color-new-primary);
        }

        #storeProduct-{{ product.id }} .product--current-price {
            color: var(--color-new-primary);
        }

        #storeProduct-{{ product.id }} .product--add-wrapper .button.primary {
            background-color: var(--color-new-primary);
        }
    {% endcapture %}
{% else %}
    {% capture primaryColor %}
        #storeProduct-{{ product.id }} {
            --color-new-primary: {{ settings.accent_color_primary }};
        }

        #storeProduct-{{ product.id }} .product--title {
            color: var(--color-new-primary);
        }

        #storeProduct-{{ product.id }} .product--option-wrapper fieldset legend {
            color: var(--color-new-primary);
        }

        #storeProduct-{{ product.id }} .product--current-price {
            color: var(--color-new-primary);
        }

        #storeProduct-{{ product.id }} .product--add-wrapper .button.primary {
            background-color: var(--color-new-primary);
        }
    {% endcapture %}
{% endif %}

{% if product.metafields.custom.product_secondary_color != blank %}
    {% capture secondaryColor %}
        #storeProduct-{{ product.id }} {
            --color-new-secondary: {{ product.metafields.custom.product_secondary_color }};
        }

        #storeProduct-{{ product.id }} .product--subtitle {
            color: var(--color-new-secondary);
        }


        #storeProduct-{{ product.id }} .product--unit-price {
            color: var(--color-new-secondary);
        }
    {% endcapture %}
{% else %}
    {% capture secondaryColor %}
        #storeProduct-{{ product.id }} {
            --color-new-secondary: {{ settings.accent_color_secondary }};
        }

        #storeProduct-{{ product.id }} .product--subtitle {
            color: var(--color-new-secondary);
        }


        #storeProduct-{{ product.id }} .product--unit-price {
            color: var(--color-new-secondary);
        }
    {% endcapture %}
{% endif %}

{% if product.metafields.custom.product_text_color != blank %}
    {% capture primaryTextColor %}
        #storeProduct-{{ product.id }} {
            --new-primary-btn-text-color: {{ product.metafields.custom.product_text_color }};
        }

        #storeProduct-{{ product.id }} .product--option input[type=radio]:checked + label {
            color: var(--new-primary-btn-text-color);
        }
    {% endcapture %}
{% else %}
    {% capture primaryTextColor %}
        #storeProduct-{{ product.id }} {
            --new-primary-btn-text-color: white;
        }

        #storeProduct-{{ product.id }} .product--option input[type=radio]:checked + label {
            color: var(--new-primary-btn-text-color);
        }
    {% endcapture %}
{% endif %}

{% if section.settings.product_image_aspect_ratio != 'auto' %}
    {% capture aspectRatio %}
        .product--image-item {
            aspect-ratio: {{ section.settings.product_image_aspect_ratio }};
        }
    {% endcapture %}
{% endif %}

{% if product.metafields.custom.product_primary_color != blank and product.metafields.custom.product_secondary_color != blank %}
    {% capture primaryGradient %}
        #storeProduct-{{ product.id }} {
            --new-primary-gradient: linear-gradient(to right, var(--color-new-primary), var(--color-new-secondary));
        }

        #storeProduct-{{ product.id }} .product--option input[type=radio]:checked + label {
            background-image: var(--new-primary-gradient);
        }
    {% endcapture %}
{% else %}
    {% capture primaryGradient %}
        #storeProduct-{{ product.id }} {
            --new-primary-gradient: linear-gradient(to right, var(--color-new-primary), var(--color-new-secondary));
        }

        #storeProduct-{{ product.id }} .product--option input[type=radio]:checked + label {
            background-image: var(--new-primary-gradient);
        }
    {% endcapture %}
{% endif %}

<style>
    {{ primaryColor }}
    {{ secondaryColor }}
    {{ primaryTextColor }}
    {{ aspectRatio }}
    {{ primaryGradient }}
    .store--product {
        padding: {{ section.settings.product_top_padding }}px 0 {{ section.settings.product_bottom_padding }}px 0;
    }

    @media (min-width: 540px) {
        .product--container {
            max-width: {{ section.settings.product_container_width }}px;
        }
    }
</style>

<section id="storeProduct-{{ product.id }}" class="store--product">
    <div class="product--container container">
        <div class="product--inner">
            <div class="product--images-wrapper">
                <div class="product--images-inner-wrapper">
                    {% for image in product.images %}
                        <div class="product--image-item">
                            <img
                                class="product--image"
                                src="{{ image | image_url }}"
                                loading="eager"
                                width=""
                                height=""
                            />
                        </div>
                    {% endfor %}
                </div>
                <div class="product--image-indicator-wrapper" role="tablist"></div>
            </div>
            <div class="product--form-wrapper">
                <div class="product--title-wrapper">
                    {% if section.settings.product_split_title == true %}
                        {%- liquid 
                            assign productTitle = product.title | split: '-'
                            assign productName = productTitle[0]
                            assign productSubtitle = productTitle[1]
                        %}
                        <h1 class="product--title">{{ productName }}</h1>
                        <p class="product--subtitle">{{ productSubtitle }}</p>
                    {% else %}
                        <h1 class="product--title">{{ product.title }}</h1>
                    {% endif %}
                </div>
                {% if product.description != blank %}
                    <div class="product--description-wrapper">
                        {{ product.description }}
                    </div>
                {% endif %}
                {%- form 'product', product, data-productid: product.id %}
                    <input id="product-id" type="hidden" name="id" data-productid="{{ product.id }}" value="{{ product.selected_or_first_available_variant.id }}">

                    {% if product.variants.size > 1 %}
                        <div class="product--option-wrapper">
                                {% for option in product.options_with_values %}
                                <fieldset>
                                    <legend>{{ option.name | append: ':' }}</legend>
                                    {% for value in option.values %}
                                        <div class="product--option">
                                            <input
                                                type="radio"
                                                name="{{ option.name }}"
                                                {% if option.selected_value == value %}checked{% endif %}
                                                value="{{ value }}"
                                                id="{{ option.name | handleize }}-{{ value | handleize }}"
                                            />
                                            <label for="{{ option.name | handleize }}-{{ value | handleize }}">
                                                {{ value }}
                                            </label>
                                        </div>
                                    {% endfor %}
                                </fieldset>
                            {% endfor %}
                        </div>
                    {% endif %}

                    <div class="product--price-wrapper">
                        <p class="product--price product--current-price">
                            {{ product.selected_or_first_available_variant.price | money }}
                        </p>
                        <p class="product--price product--compare-price {% unless product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %}visually-hidden{%endunless %}">
                            {{ product.selected_or_first_available_variant.compare_at_price | money }}
                        </p>
                        <p class="product--unit-price">
                            {{ section.settings.product_per_unit }}
                        </p>
                    </div>

                    <div class="product--input-wrapper general-product--input-wrapper">
                        <button class="product--quantity-adjust-btn product--quantity-decrease button action tertiary">-</button>
                        <input class="product--quantity-input" name="quantity" value="1" />
                        <button class="product--quantity-adjust-btn product--quantity-increase button action tertiary">+</button>
                    </div>

                    {% if product.available %}
                        <div class="product--add-wrapper">
                            <button type="submit" data-action="add-to-cart" class="button action primary">Add to Cart</button>
                        </div>
                    {% else %}
                        <div class="product--add-wrapper">
                            <button disabled type="submit" data-action="add-to-cart" class="button action primary">Sorry Out of Stock</button>
                        </div>
                    {% endif %}

                    <div class="product--usp-messaging-wrapper">
                        <p class="product--usp-message">{{ section.settings.usp_messaging }}</p>
                    </div>
                {% endform %}
            </div>
        </div>
    </div>
</section>

<script>
    var product = {{ product | json }};

    // Create function to change the item to be submitted to cart
    document.querySelectorAll('.product--option-wrapper input[type="radio"]').forEach(radio => {

        // Find Selected Options
        radio.addEventListener('change', () => {
            var selectedOptions = [];

            // Push the selected items to the array above
            document.querySelectorAll('.product--option-wrapper input[type="radio"]:checked').forEach(radio => {
                selectedOptions.push(radio.value);
            });

            // Find Matching Options
            var matchedVariant = product.variants.find(variant => {
                var pass = true;

                // Check the selected options array for the matched variant
                for (var i = 0; i < selectedOptions.length; i++) {
                    if(selectedOptions.indexOf(variant.options[i]) === -1) {
                        pass = false;
                        break
                    }
                }

                return pass;
            });

            // Update the hidden input value with the matched variant id
            document.querySelector('#product-id').value = matchedVariant.id;

            // Change Price
            document.querySelector('.product--price').textContent = formatMoney(matchedVariant.price, "{{ shop.money_format }}");
            document.querySelector('.product--compare-price').textContent = formatMoney(matchedVariant.compare_at_price, "{{ shop.money_format }}");

            // Hide and show the price depending on whether it is higher or lower than the current price
            matchedVariant.compare_at_price > matchedVariant.price ?
                document.querySelector('.product--compare-price').classList.remove('visually-hidden') :
                document.querySelector('.product--compare-price').classList.add('visually-hidden');
        });
    });
    
    // Adjustment input quantity
    var currentInputQuantity = document.querySelector('.product--quantity-input').value;

    const decreaseButton = document.querySelector('.product--quantity-decrease');
    const increaseButton = document.querySelector('.product--quantity-increase');
    const quantityInput = document.querySelector('.product--quantity-input');

    // Function to adjust the quantity
    function adjustQuantity(increase) {
        event.preventDefault();

        // Get the current value of the input
        let currentValue = parseInt(quantityInput.value);

        // Calculate the new value (make sure it doesn't go below 1)
        if (!isNaN(currentValue)) {
            currentValue = Math.max(1, currentValue + (increase ? 1 : -1));
        } else {
            currentValue = 1;
        }

        // Update the input value
        quantityInput.value = currentValue;
    }

    // Add click event listeners for both buttons
    increaseButton.addEventListener('click', (event) => adjustQuantity(true));
    decreaseButton.addEventListener('click', (event) => adjustQuantity(false));
</script>

{% schema %}
{
  "name": "Product Main",
  "settings": [
    {
      "type": "range",
      "id": "product_top_padding",
      "label": "Product Top Padding",
      "min": 10,
      "max": 100,
      "step": 10,
      "default": 20,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "product_bottom_padding",
      "label": "Product Bottom Padding",
      "min": 10,
      "max": 100,
      "step": 10,
      "default": 20,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "product_container_width",
      "label": "Product Container Width",
      "min": 1200,
      "max": 3000,
      "step": 30,
      "default": 1920,
      "unit": "px"
    },
    {
        "type": "select",
        "id": "product_image_aspect_ratio",
        "label": "Product image aspect ratio",
        "info": "Selecting auto will allow the image height to be set depending on the file aspect ratio",
        "options": [
            {
                "value": "auto",
                "label": "Auto"
            },
            {
                "value": "4/3",
                "label": "Landscape"
            },
            {
                "value": "1/1",
                "label": "Square"
            },
            {
                "value": "3/4",
                "label": "Portrait"
            }
        ],
        "default": "3/4"
    },
    {
        "type": "checkbox",
        "id": "product_split_title",
        "label": "Split Product Title",
        "default": true,
        "info": "This will look for the first '-' in the product name and split the content before it as the title and the content after as the subtitle or in this example the flavour"
    },
    {
      "type": "text",
      "id": "product_per_unit",
      "label": "Product Unit",
      "default": "Per Box"
    },
    {
      "type": "text",
      "id": "usp_messaging",
      "label": "USP Messaging",
      "default": "30-Day Guarantee • Free UK Mainland Shipping over £65"
    }
  ]
}
{% endschema %}